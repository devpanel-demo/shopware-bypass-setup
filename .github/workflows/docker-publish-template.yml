name: Docker build and push template
on:
  push:
    branches:
      - main
      - develop
jobs:
  build-application:
    runs-on: ubuntu-latest
    services:
      webserver:
        image: devpanel/php:8.3-base
        env:
          DP_APP_ID: 'shopware-bypass-setup'
          APP_ROOT: '/var/www/html'
          WEB_ROOT: '/var/www/html/public'
          CODES_USER_DATA_DIR: '/var/www/html/.vscode'
          CODES_WORKING_DIR: '/var/www/html'
          APACHE_RUN_USER: 'www'
          APACHE_RUN_GROUP: 'www'
          CODES_ENABLE: 'yes'
          DB_HOST: mysql
          DB_PORT: 3306
          DB_ROOT_PASSWORD: root
          DB_NAME: shopware
          DB_USER: user
          DB_PASSWORD: password
          DB_DRIVER: mysql
          DATABASE_URL: mysql://user:password@mysql:3306/shopware
          APP_URL: http://localhost
          APP_SECRET: b6d42ce2282dae90f5441cb6b474acd2
          INSTANCE_ID: dec7e81235cc97897b661da7e0c83c58
          BLUE_GREEN_DEPLOYMENT: 0
          COMPOSER_HOME: /var/www/html/var/cache/composer
          APP_ENV: prod
          APP_DEBUG: 0
        ports:
          - 80:80
        volumes:
          - ${{ github.workspace }}:/app/ # Mounting the checked-out code
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: shopware
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Set up Docker Environment
        uses: docker/setup-buildx-action@v3

      - name: Check out code
        uses: actions/checkout@v4

      - name: Disable SSL in MySQL service
        run: |
          docker exec ${{ job.services.webserver.id }} bash -c '
            sudo mkdir -p /etc/mysql/conf.d
            echo "[client]" | sudo tee /etc/mysql/conf.d/no-ssl.cnf
            echo "skip-ssl" | sudo tee -a /etc/mysql/conf.d/no-ssl.cnf
          '

      - name: Setup Shopware
        run: |
          echo "PREPARE DIR FOR INSTALL"
          docker exec ${{ job.services.webserver.id }} bash -c "sudo rm -rf \$APP_ROOT && sudo mkdir -p \$APP_ROOT"
          docker exec ${{ job.services.webserver.id }} bash -c "sudo cp -r /app/. \$APP_ROOT/."
          docker exec ${{ job.services.webserver.id }} bash -c "sudo chown -R www:www \$APP_ROOT && chmod +x \$APP_ROOT/.devpanel/init.sh && chmod +x \$APP_ROOT/.devpanel/custom_package_installer.sh && chmod +x \$APP_ROOT/.devpanel/init-container.sh"
          docker exec ${{ job.services.webserver.id }} bash -c "cd \$APP_ROOT && rm -rf .git"
          echo "INSTALL CUSTOM PACKAGE"
          docker exec ${{ job.services.webserver.id }} bash -c "cd \$APP_ROOT && bash .devpanel/custom_package_installer.sh"
          echo "INSTALL SHOPWARE"
          docker exec ${{ job.services.webserver.id }} bash -c "cd \$APP_ROOT && bash .devpanel/init.sh"
          docker exec ${{ job.services.webserver.id }} bash -c "cd \$APP_ROOT && ls -al"
          echo "DUMPS DATABASE + STATIC FILE"
          docker exec ${{ job.services.webserver.id }} bash -c "cd \$APP_ROOT && bash .devpanel/create_quickstart.sh"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set env to testing environment
        run: |
          echo "IMAGE_TAG=devpanel/shopware-bypass-setup:develop" >> $GITHUB_ENV

      - name: Set env to production environment
        if: endsWith(github.ref, '/main')
        run: |
          echo "IMAGE_TAG=devpanel/shopware-bypass-setup:main" >> $GITHUB_ENV

      - name: Commit and push the container state to Docker Hub
        run: |
          docker commit ${{ job.services.webserver.id }} ${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_TAG }}

      - name: Push to tag latest
        if: endsWith(github.ref, '/main')
        run: |
          docker commit ${{ job.services.webserver.id }} devpanel/shopware-bypass-setup:latest
          docker push devpanel/shopware-bypass-setup:latest
